Lesion_Accoustic->.ebextensions
Lesion_Accoustic->.ebextensions->python.config
Lesion_Accoustic->artifacts
Lesion_Accoustic->.github->workflow->deploy.yml
Lesion_Accoustic->artifacts->data.csv
Lesion_Accoustic->artifacts->model.pkl
Lesion_Accoustic->artifacts->preprocessor.pkl
Lesion_Accoustic->artifacts->test.csv
Lesion_Accoustic->artifacts->train.csv
Lesion_Accoustic->Lesion_Normal_Plantar_Classifier.egg-info
Lesion_Accoustic->logs
Lesion_Accoustic->src
Lesion_Accoustic->src->__init__.py
Lesion_Accoustic->src->components
Lesion_Accoustic->src->components->pipeline
Lesion_Accoustic->src->components->__init__.py
Lesion_Accoustic->src->components->data_ingestion.py
Lesion_Accoustic->src->components->data_transformation.py
Lesion_Accoustic->src->components->model_trainer.py
Lesion_Accoustic->src->exception.py
Lesion_Accoustic->src->logger.py
Lesion_Accoustic->src->utils.py
Lesion_Accoustic->templates
Lesion_Accoustic->templates->index.html
Lesion_Accoustic->templates->home.html
Lesion_Accoustic->venv
Lesion_Accoustic->.gitignore
Lesion_Accoustic->application.py
Lesion_Accoustic->requirements.txt
Lesion_Accoustic->setup.py

my python.config is "
option_settings:
  aws:elasticbeanstalk:container:python:
    WSGIPath: application.py

"
my applicaiton.py is 
"from flask import Flask, request, render_template
import numpy as np
import pandas as pd

from sklearn.preprocessing import StandardScaler
from src.components.pipeline.predict_pipeline import CustomData, PredictPipeline

application = Flask(__name__)
app=application

## Route for a home page
@app.route('/')
def index():
    return render_template('index.html')

@app.route('/predictdata', methods=['GET', 'POST'])
def predict_datapoint():
    if request.method=='GET':
        return render_template('home.html')
    else:
        data=CustomData(
            gender=request.form.get('gender'),
            race_ethnicity=request.form.get('race_ethnicity'),
            parental_level_of_education=request.form.get('Parental_Level_of_Education'),
            lunch=request.form.get('lunch'),
            test_preparation_course=request.form.get('Test_Preparation_Course'),
            reading_score=request.form.get('reading_score'),
            writing_score=request.form.get('writing_score')
        )
        print("\nmy 2nd debug ",data)
        pred_df = data.get_data_as_data_frame()
        print(pred_df)

        predict_pipeline= PredictPipeline()
        results=predict_pipeline.predict(pred_df)
        return render_template('home.html', results=results[0])
    
if __name__=="__main__":
    app.run(host="0.0.0.0", debug=True)
    #app.run(host="0.0.0.0") # this is mandatory to remove debug=True when using AWS 
                            # and the name must be application.py instead app.py



           "
